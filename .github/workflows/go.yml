# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go
on:
  workflow_dispatch:
jobs:
  build:
    name: Build
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            # artifact_name: ${{ github.event.repository.name }}-linux-amd64
            artifact_name: fscan-linux-amd64
            install_deps: sudo apt update && sudo apt install -y libc6-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev libasound2-dev pkg-config
            env_vars: GOOS=linux GOARCH=amd64
            build_args: -a -ldflags '-extldflags "-static" -s -w' -trimpath
          - os: ubuntu-latest
            # artifact_name: ${{ github.event.repository.name }}-windows-amd64.exe
            artifact_name: fscan-windows-amd64.exe
            install_deps: ""
            env_vars: GOOS=windows GOARCH=amd64 CGO_ENABLED=0
            build_args: -a -ldflags '-extldflags "-static" -s -w' -trimpath
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone Code
        run: |
          git clone https://github.com/shadow1ng/fscan.git
          cd fscan
          git checkout tags/v2.1.0
          go mod tidy
  
      - name: Install dependencies
        run: ${{ matrix.install_deps }}
  
      - name: Build
        run: ${{ matrix.env_vars }} go build ${{ matrix.build_args }} -o dist/${{ matrix.artifact_name }}
        working-directory: fscan
  
      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v5.0.0
        with:
          name: zipfile
          path: |
            fscan/dist/${{ matrix.artifact_name }}

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            fscan/dist/${{ matrix.artifact_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
